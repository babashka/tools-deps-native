# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1
jobs:
  linux:
    resource_class: large
    docker:
      - image: cimg/clojure:1.11.1-openjdk-17.0
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-community-openjdk-21.0.2+13.1
      APP_PLATFORM: linux # used in release script
      APP_TEST_ENV: native
      BABASHKA_STATIC: true
      BABASHKA_MUSL: true
    steps:
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - checkout
      - restore_cache:
          keys:
            - linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
            sudo -E script/setup-musl
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-community-openjdk-21.0.2+13.1 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-21.0.2/graalvm-community-jdk-21.0.2_linux-x64_bin.tar.gz
              tar xzf graalvm-community-jdk-21.0.2_linux-x64_bin.tar.gz
            fi
      - run:
          name: Install bb
          command: |
            # bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd) --dev-build
            # sudo mv bb /usr/local/bin
            bb --version
      - run:
          name: Build binary
          command: |
            bb script/compile.clj
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            bb script/test.clj
      # - run:
      #     name: Performance report
      #     command: |
      #       .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-community-openjdk-21.0.2+13.1
          key: linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  linux-aarch64:
    machine:
      image: ubuntu-2204:2023.10.1
      resource_class: arm.large
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-community-openjdk-21.0.2+13.1
      APP_PLATFORM: linux # used in release script
      APP_TEST_ENV: native
      BABASHKA_STATIC: true
      BABASHKA_MUSL: false
      BABASHKA_ARCH: aarch64
    steps:
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - checkout
      - restore_cache:
          keys:
            - linux-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.10.3.1029.sh
            chmod +x linux-install-1.10.3.1029.sh
            sudo ./linux-install-1.10.3.1029.sh
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
            sudo -E script/setup-musl
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-community-openjdk-21.0.2+13.1 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-21.0.2/graalvm-community-jdk-21.0.2_linux-aarch64_bin.tar.gz
              tar xzf graalvm-community-jdk-21.0.2_linux-aarch64_bin.tar.gz
            fi
      - run:
          name: Install bb
          command: |
            bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd) --dev-build
            sudo mv bb /usr/local/bin
            bb --version
      - run:
          name: Build binary
          command: |
            bb script/compile.clj
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            bb script/test.clj
      # - run:
      #     name: Performance report
      #     command: |
      #       .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-community-openjdk-21.0.2+13.1
          key: linux-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  mac:
    macos:
      xcode: "15.2.0"
    resource_class: "macos.x86.medium.gen2"
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-community-openjdk-21.0.2+13.1/Contents/Home
      APP_PLATFORM: macos # used in release script
      APP_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf ~/.gitconfig
      - restore_cache:
          keys:
            - mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            .circleci/script/install-clojure /usr/local
      - run:
          name: Install Leiningen
          command: |
            .circleci/script/install-leiningen

      - run:
          name: Download GraalVM
          command: |
            cd ~
            ls -la
            if ! [ -d graalvm-community-openjdk-21.0.2+13.1 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-21.0.2/graalvm-community-jdk-21.0.2_macos-x64_bin.tar.gz
              tar xzf graalvm-community-jdk-21.0.2_macos-x64_bin.tar.gz
            fi
      - run:
          name: Install bb
          command: |
            bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd) --dev-build
            sudo mv bb /usr/local/bin
      - run:
          name: Build binary
          command: |
            bb script/compile.clj
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            bb script/test.clj
      # - run:
      #     name: Performance report
      #     command: |
      #       .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-community-openjdk-21.0.2+13.1
          key: mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  deploy:
    docker:
      - image: cimg/clojure:1.11.1-openjdk-17.0
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "deps.edn" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: .circleci/script/deploy
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}
  # docker:
  #   docker:
  #     - image: circleci/buildpack-deps:stretch
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - run:
  #         name: Build Docker image
  #         command: .circleci/script/docker

workflows:
  version: 2
  ci:
    jobs:
#      - jvm
      - linux
      - linux-aarch64
      - mac
      - deploy:
          filters:
            branches:
              only: master
          requires:
#            - jvm
            - linux
            - mac
      # - docker:
      #     filters:
      #       branches:
      #         only: master
      #     requires:
      #       - jvm
      #       - linux
      #       - mac
