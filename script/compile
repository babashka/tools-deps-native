#!/bin/bash

set -eou pipefail

app_name=tools-deps-native
app_ns=borkdude.tdn.main

if [ -z "$GRAALVM_HOME" ]; then
    echo "Please set GRAALVM_HOME"
    exit 1
fi

"$GRAALVM_HOME/bin/gu" install native-image

export JAVA_HOME=$GRAALVM_HOME
export PATH=$GRAALVM_HOME/bin:$PATH

rm -rf classes
rm -rf tools-deps-native # should not be necessary, but just in case
mkdir classes
clojure -M:compile-main

init_at_build_time=$(clojure -X borkdude.tdn.main/init-at-build-time)

echo "$init_at_build_time"
sleep 1

script/gen-reflect-config.clj clojure -Scp $(clojure -Spath):classes -M:compile '{:deps {babashka/fs {:mvn/version "0.0.1"}}}'

echo "COMPILING"

args=(-cp "$(clojure -Spath):classes"
      "-H:Name=$app_name"
      -H:+ReportExceptionStackTraces
      -H:ReflectionConfigurationFiles=reflect-config-cleaned.json
      "-H:ResourceConfigurationFiles=resources.json"
      -H:+JNI
      "-H:Log=registerResource:"
      "-H:EnableURLProtocols=http,https,jar"
      "--enable-all-security-services"
      -J-Dclojure.spec.skip-macros=true
      -J-Dclojure.compiler.direct-linking=true
      --initialize-at-build-time="$init_at_build_time,cognitect.aws,org.slf4j"
      --report-unsupported-elements-at-runtime
      --verbose
      --no-fallback
      --no-server
      --allow-incomplete-classpath
      --trace-object-instantiation=java.lang.Thread
      "-J-Xmx5g"
      "${app_ns}"
     )

"$GRAALVM_HOME/bin/native-image" "${args[@]}"
